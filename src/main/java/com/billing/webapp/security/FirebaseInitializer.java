package com.billing.webapp.security;

import com.google.auth.oauth2.GoogleCredentials;
import com.google.firebase.FirebaseApp;
import com.google.firebase.FirebaseOptions;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import javax.annotation.PostConstruct;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;

@Component
public class FirebaseInitializer {
    /*
    * This class is used to initialize the Firebase app.
    * It is annotated with @Component so that it is automatically initialized when the application starts.
    * The @Value annotation is used to inject the path to the Firebase key file.
    * The @PostConstruct annotation is used to annotate a method that needs to be executed after dependency injection is done to perform any initialization.
    * The initialize() method initializes the Firebase app using the Firebase key file.
    * The Firebase key file is a JSON file that contains the Firebase credentials.
    * The frontend uses the token generated by Firebase to authenticate with the backend if the user is logged in.
    * Otherwise, the user is redirected to the login page. Meaning no one can access the backend endpoints without being logged in.
     */

    @Value("${firebase.key.path}")
    private String firebasekeypath;

    @PostConstruct
    public void initialize() {
        try {
            // Initialize the Firebase app using the Firebase key file path injected above
            InputStream serviceAccount = new FileInputStream(new File(firebasekeypath));

            FirebaseOptions options = FirebaseOptions.builder()
                    // Set the Firebase credentials in the options builder using the Firebase key file InputStream object created above
                    .setCredentials(GoogleCredentials.fromStream(serviceAccount))
                    .build(); // Build the options object

            // Check if the Firebase app is already initialized to avoid re-initializing it unnecessarily
            if (FirebaseApp.getApps().isEmpty()) {
                // Initialize the Firebase app
                FirebaseApp.initializeApp(options);
            }
        } catch (IOException e) {
            // Handle error
            throw new IllegalStateException("Failed to initialize Firebase", e);
        }
    }
}